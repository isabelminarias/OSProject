
package pack;

import static java.lang.Thread.*;
import java.util.concurrent.Semaphore;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *Proyecto 1 Sistemas Operativos
 * Isabel M Arias 
 * Carnet 20151120136
 * Jose Guerrero
 * Carnet 20131110135
 * Preparador: Daniel Diaz
 * Profesor: Nicolas Araque
 * Universidad Metropolitana, Ingenieria de Sistemas
 */
public class proyectoApp extends javax.swing.JFrame {

        
    
    int prodcontrol = 0;
    LectorDeTexto miFile = new LectorDeTexto();
    
    // Inicializacion de los arrays que guardaran los productores que 
    // puedo tener en mi compa침ia
    Productor[] PControlesQ = new Productor[miFile.getMaxProd1()];      // Array de Productores de Controles (length = m치ximo segun el txt
    Productor[] PConsolasQ = new Productor[miFile.getMaxProd2()];       // Array de Productores de Consolas (length = m치ximo segun el txt
    Productor[] PPacksQ = new Productor[miFile.getMaxProd3()];      
    
    Consumidor[] CAssemblerQ = new Consumidor[miFile.getMaxAssemblers()];
    
    
    //Almacenes de los Items en Produccion
    Almacen AlmControls = new Almacen(miFile.getMaxControls());         //los almacenes solo piden el tama침o 
    Almacen AlmConsoles = new Almacen(miFile.getMaxConsoles());         //que es dado por el txt
    Almacen AlmPacks = new Almacen(miFile.getMaxPacks());
    int productosFinalizados = 0;                                       //Almacen de productos hechos es contador porque puede ser infinito

    //Semaforos
    Semaphore SConsumidor = new Semaphore (0);                          // El consumidor en este caso es el ensamblador. 
    Semaphore SProd1 = new Semaphore(miFile.getMaxControls());          // Semaforos de los productores de controles
    Semaphore SProd2 = new Semaphore(miFile.getMaxConsoles());          // Semaforos de los productores de consolas
    Semaphore SProd3 = new Semaphore(miFile.getMaxPacks());             // Semaforos de los productores de paquetes
    Semaphore ExcluAlm1 = new Semaphore(1);                             // Semafaro de exclusividad mutua del almacen de controles
    Semaphore ExcluAlm2 = new Semaphore(1);                             // Semafaro de exclusividad mutua del almacen de consolas
    Semaphore ExcluAlm3 = new Semaphore(1);                             // Semaforo de exclusividad mutua del almacen de paquetes
    Semaphore Clock = new Semaphore(1);
    Semaphore SCont = new Semaphore(1);
    int[] cont = new int[2];
    
    //
    
    
    
    public proyectoApp() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ProdsEnsambladores = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        PCdelete = new javax.swing.JButton();
        PCAdd = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        PCNdelete = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        PCNAdd = new javax.swing.JButton();
        prodConsolaText = new javax.swing.JTextField();
        prodPaqueteText = new javax.swing.JTextField();
        prodControlText = new javax.swing.JTextField();
        PPAdd = new javax.swing.JButton();
        PPDelete = new javax.swing.JButton();
        ProdDePaquetesText = new javax.swing.JLabel();
        PanelEnsambladores = new javax.swing.JPanel();
        EnsambladoresPeq = new javax.swing.JLabel();
        EnsambladoresGde = new javax.swing.JLabel();
        EnsDelete = new javax.swing.JButton();
        prodAssText = new javax.swing.JTextField();
        EnsAdd = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        ControlesProducidos = new javax.swing.JTextField();
        ConsolasProducidas = new javax.swing.JTextField();
        PaquetesProducidos = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        ProductosEnsamblados = new javax.swing.JTextField();
        MaxControlesText = new javax.swing.JTextField();
        MaxConsolasText = new javax.swing.JTextField();
        MaxPackText = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        infobox = new javax.swing.JLabel();
        CronometradorPanel = new javax.swing.JPanel();
        CronoTitle = new javax.swing.JLabel();
        StartButton = new javax.swing.JButton();
        StopButton = new javax.swing.JButton();
        dayCounterText = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        dispatchCountdownText = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        CronoTitle1 = new javax.swing.JLabel();
        estadoCronometro = new javax.swing.JTextField();
        estadoGerente = new javax.swing.JTextField();
        alertDispatch = new javax.swing.JTextField();
        unitsSold = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        priceText = new javax.swing.JTextField();
        moneyDisplay = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        calculateButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ProdsEnsambladores.setBackground(new java.awt.Color(204, 204, 204));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Productores");

        PCdelete.setBackground(new java.awt.Color(204, 204, 255));
        PCdelete.setText("Despedir");
        PCdelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PCdeleteMouseClicked(evt);
            }
        });

        PCAdd.setBackground(new java.awt.Color(204, 204, 255));
        PCAdd.setText("Contratar");
        PCAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PCAddMouseClicked(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel2.setText("Productores de Controles");

        PCNdelete.setBackground(new java.awt.Color(204, 204, 255));
        PCNdelete.setText("Despedir");
        PCNdelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PCNdeleteMouseClicked(evt);
            }
        });
        PCNdelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PCNdeleteActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel3.setText("Productores de Consolas");

        PCNAdd.setBackground(new java.awt.Color(204, 204, 255));
        PCNAdd.setText("Contratar");
        PCNAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PCNAddMouseClicked(evt);
            }
        });

        prodConsolaText.setEditable(false);
        prodConsolaText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        prodConsolaText.setText("0");
        prodConsolaText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prodConsolaTextActionPerformed(evt);
            }
        });

        prodPaqueteText.setEditable(false);
        prodPaqueteText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        prodPaqueteText.setText("0");
        prodPaqueteText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prodPaqueteTextActionPerformed(evt);
            }
        });

        prodControlText.setEditable(false);
        prodControlText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        prodControlText.setText("0");
        prodControlText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prodControlTextActionPerformed(evt);
            }
        });

        PPAdd.setBackground(new java.awt.Color(204, 204, 255));
        PPAdd.setText("Contratar");
        PPAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PPAddMouseClicked(evt);
            }
        });

        PPDelete.setBackground(new java.awt.Color(204, 204, 255));
        PPDelete.setText("Despedir");
        PPDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PPDeleteMouseClicked(evt);
            }
        });

        ProdDePaquetesText.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        ProdDePaquetesText.setText("Productores de Paquetes");

        EnsambladoresPeq.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        EnsambladoresPeq.setText("Ensambladores");

        EnsambladoresGde.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        EnsambladoresGde.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        EnsambladoresGde.setText("Ensambladores");

        EnsDelete.setBackground(new java.awt.Color(204, 255, 204));
        EnsDelete.setText("Despedir");
        EnsDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EnsDeleteMouseClicked(evt);
            }
        });

        prodAssText.setEditable(false);
        prodAssText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        prodAssText.setText("0");
        prodAssText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prodAssTextActionPerformed(evt);
            }
        });

        EnsAdd.setBackground(new java.awt.Color(204, 255, 204));
        EnsAdd.setText("Contratar");
        EnsAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EnsAddMouseClicked(evt);
            }
        });
        EnsAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EnsAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelEnsambladoresLayout = new javax.swing.GroupLayout(PanelEnsambladores);
        PanelEnsambladores.setLayout(PanelEnsambladoresLayout);
        PanelEnsambladoresLayout.setHorizontalGroup(
            PanelEnsambladoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelEnsambladoresLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(EnsDelete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(prodAssText, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelEnsambladoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(EnsambladoresGde)
                    .addGroup(PanelEnsambladoresLayout.createSequentialGroup()
                        .addComponent(EnsAdd)
                        .addGap(40, 40, 40)
                        .addComponent(EnsambladoresPeq)))
                .addGap(0, 51, Short.MAX_VALUE))
        );
        PanelEnsambladoresLayout.setVerticalGroup(
            PanelEnsambladoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelEnsambladoresLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(EnsambladoresGde)
                .addGap(18, 18, 18)
                .addGroup(PanelEnsambladoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prodAssText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EnsDelete)
                    .addComponent(EnsAdd)
                    .addComponent(EnsambladoresPeq))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jLabel6.setText("Controles producidos");

        jLabel8.setText("Consolas producidas");

        jLabel9.setText("Paquetes producidos");

        ControlesProducidos.setEditable(false);
        ControlesProducidos.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ControlesProducidos.setText("0");
        ControlesProducidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ControlesProducidosActionPerformed(evt);
            }
        });

        ConsolasProducidas.setEditable(false);
        ConsolasProducidas.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ConsolasProducidas.setText("0");
        ConsolasProducidas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConsolasProducidasActionPerformed(evt);
            }
        });

        PaquetesProducidos.setEditable(false);
        PaquetesProducidos.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        PaquetesProducidos.setText("0");
        PaquetesProducidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PaquetesProducidosActionPerformed(evt);
            }
        });

        jLabel10.setText("Productos Ensamblados");

        ProductosEnsamblados.setEditable(false);
        ProductosEnsamblados.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ProductosEnsamblados.setText("0");
        ProductosEnsamblados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProductosEnsambladosActionPerformed(evt);
            }
        });

        MaxControlesText.setEditable(false);
        MaxControlesText.setBackground(new java.awt.Color(255, 204, 204));
        MaxControlesText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        MaxControlesText.setText("0");
        MaxControlesText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MaxControlesTextActionPerformed(evt);
            }
        });

        MaxConsolasText.setEditable(false);
        MaxConsolasText.setBackground(new java.awt.Color(255, 204, 204));
        MaxConsolasText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        MaxConsolasText.setText("0");
        MaxConsolasText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MaxConsolasTextActionPerformed(evt);
            }
        });

        MaxPackText.setEditable(false);
        MaxPackText.setBackground(new java.awt.Color(255, 204, 204));
        MaxPackText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        MaxPackText.setText("0");
        MaxPackText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MaxPackTextActionPerformed(evt);
            }
        });

        jLabel7.setText("Almacenes:");

        infobox.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(infobox)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ProductosEnsamblados, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(PaquetesProducidos, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ConsolasProducidas, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(47, 47, 47)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(ControlesProducidos, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(MaxControlesText, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MaxConsolasText, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MaxPackText, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ControlesProducidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(MaxControlesText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ConsolasProducidas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(MaxConsolasText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(PaquetesProducidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(MaxPackText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ProductosEnsamblados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(infobox)
                .addContainerGap(60, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout ProdsEnsambladoresLayout = new javax.swing.GroupLayout(ProdsEnsambladores);
        ProdsEnsambladores.setLayout(ProdsEnsambladoresLayout);
        ProdsEnsambladoresLayout.setHorizontalGroup(
            ProdsEnsambladoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ProdsEnsambladoresLayout.createSequentialGroup()
                .addGroup(ProdsEnsambladoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ProdsEnsambladoresLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(ProdsEnsambladoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ProdsEnsambladoresLayout.createSequentialGroup()
                                .addComponent(PCNdelete)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(prodConsolaText, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(PCNAdd)
                                .addGap(40, 40, 40)
                                .addComponent(jLabel3))
                            .addGroup(ProdsEnsambladoresLayout.createSequentialGroup()
                                .addComponent(PPDelete)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(prodPaqueteText, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(PPAdd)
                                .addGap(40, 40, 40)
                                .addComponent(ProdDePaquetesText))
                            .addGroup(ProdsEnsambladoresLayout.createSequentialGroup()
                                .addComponent(PCdelete)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(prodControlText, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(ProdsEnsambladoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addGroup(ProdsEnsambladoresLayout.createSequentialGroup()
                                        .addComponent(PCAdd)
                                        .addGap(40, 40, 40)
                                        .addComponent(jLabel2))))
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(ProdsEnsambladoresLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(PanelEnsambladores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        ProdsEnsambladoresLayout.setVerticalGroup(
            ProdsEnsambladoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ProdsEnsambladoresLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(9, 9, 9)
                .addGroup(ProdsEnsambladoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PCdelete)
                    .addComponent(PCAdd)
                    .addComponent(jLabel2)
                    .addComponent(prodControlText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ProdsEnsambladoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prodConsolaText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PCNdelete)
                    .addComponent(PCNAdd)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ProdsEnsambladoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prodPaqueteText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PPDelete)
                    .addComponent(PPAdd)
                    .addComponent(ProdDePaquetesText))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(PanelEnsambladores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        CronoTitle.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        CronoTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CronoTitle.setText("Cronometrador");

        StartButton.setBackground(new java.awt.Color(0, 204, 102));
        StartButton.setText("START");
        StartButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                StartButtonMouseClicked(evt);
            }
        });
        StartButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartButtonActionPerformed(evt);
            }
        });

        StopButton.setBackground(new java.awt.Color(255, 51, 51));
        StopButton.setText("STOP");
        StopButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                StopButtonMouseClicked(evt);
            }
        });

        dayCounterText.setEditable(false);
        dayCounterText.setBackground(new java.awt.Color(204, 204, 255));
        dayCounterText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        dayCounterText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        dayCounterText.setText("0");
        dayCounterText.setToolTipText("");

        jLabel4.setText("Days of Slave Work");

        dispatchCountdownText.setEditable(false);
        dispatchCountdownText.setBackground(new java.awt.Color(204, 204, 255));
        dispatchCountdownText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        dispatchCountdownText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        dispatchCountdownText.setText("0");
        dispatchCountdownText.setToolTipText("");

        jLabel5.setText("Until Dispatch");

        CronoTitle1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        CronoTitle1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CronoTitle1.setText("Gerente");

        estadoCronometro.setText("...");

        estadoGerente.setText("...");

        alertDispatch.setText("...");

        unitsSold.setEditable(false);
        unitsSold.setBackground(new java.awt.Color(204, 255, 204));
        unitsSold.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        unitsSold.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        unitsSold.setText("0");
        unitsSold.setToolTipText("");

        jLabel11.setText("Units sold");

        jLabel12.setText("Price per unit");

        priceText.setBackground(new java.awt.Color(204, 255, 204));
        priceText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        priceText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        priceText.setText("0");
        priceText.setToolTipText("");
        priceText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceTextActionPerformed(evt);
            }
        });

        moneyDisplay.setEditable(false);
        moneyDisplay.setBackground(new java.awt.Color(204, 255, 204));
        moneyDisplay.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        moneyDisplay.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        moneyDisplay.setText("0");
        moneyDisplay.setToolTipText("");
        moneyDisplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moneyDisplayActionPerformed(evt);
            }
        });

        jLabel13.setText("Kaching");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("WorkStation");

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pack/sony.png"))); // NOI18N

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pack/Money-2-icon.png"))); // NOI18N

        calculateButton.setBackground(new java.awt.Color(153, 255, 153));
        calculateButton.setText("Calculate");
        calculateButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                calculateButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout CronometradorPanelLayout = new javax.swing.GroupLayout(CronometradorPanel);
        CronometradorPanel.setLayout(CronometradorPanelLayout);
        CronometradorPanelLayout.setHorizontalGroup(
            CronometradorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CronometradorPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(StartButton)
                .addGap(226, 226, 226))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CronometradorPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel14)
                .addGap(131, 131, 131))
            .addGroup(CronometradorPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(CronometradorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CronometradorPanelLayout.createSequentialGroup()
                        .addGroup(CronometradorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(CronometradorPanelLayout.createSequentialGroup()
                                .addGroup(CronometradorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(18, 18, 18)
                                .addGroup(CronometradorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dayCounterText, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(dispatchCountdownText, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(CronometradorPanelLayout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addGroup(CronometradorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel13))
                                .addGap(18, 18, 18)
                                .addGroup(CronometradorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(moneyDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(unitsSold, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(priceText, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(CronometradorPanelLayout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(calculateButton)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                        .addGroup(CronometradorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(23, 23, 23))
                    .addGroup(CronometradorPanelLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(CronometradorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(CronoTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(estadoCronometro))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(CronometradorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(StopButton)
                            .addComponent(estadoGerente, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(alertDispatch, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(CronometradorPanelLayout.createSequentialGroup()
                                .addGap(55, 55, 55)
                                .addComponent(CronoTitle1))))))
        );
        CronometradorPanelLayout.setVerticalGroup(
            CronometradorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CronometradorPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14)
                .addGap(18, 18, 18)
                .addGroup(CronometradorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CronometradorPanelLayout.createSequentialGroup()
                        .addGroup(CronometradorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dayCounterText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(CronometradorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dispatchCountdownText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)))
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(CronometradorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addGroup(CronometradorPanelLayout.createSequentialGroup()
                        .addGroup(CronometradorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(unitsSold, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(CronometradorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(priceText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(CronometradorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(moneyDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(calculateButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(CronometradorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CronoTitle)
                    .addComponent(CronoTitle1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(CronometradorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(estadoCronometro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(estadoGerente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addComponent(alertDispatch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(CronometradorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(StartButton)
                    .addComponent(StopButton)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ProdsEnsambladores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(CronometradorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ProdsEnsambladores, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(CronometradorPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void prodConsolaTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prodConsolaTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_prodConsolaTextActionPerformed

    private void prodPaqueteTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prodPaqueteTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_prodPaqueteTextActionPerformed

    private void PCNdeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PCNdeleteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PCNdeleteActionPerformed

    private void prodAssTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prodAssTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_prodAssTextActionPerformed

    private void ControlesProducidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ControlesProducidosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ControlesProducidosActionPerformed

    private void ConsolasProducidasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConsolasProducidasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ConsolasProducidasActionPerformed

    private void PaquetesProducidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PaquetesProducidosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PaquetesProducidosActionPerformed

    private void ProductosEnsambladosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProductosEnsambladosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ProductosEnsambladosActionPerformed

    private void EnsAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EnsAddActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EnsAddActionPerformed

    private void PCAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PCAddMouseClicked
           
           //Obtengo el valor en la ventana de la app
           int i = Integer.valueOf(prodControlText.getText());
           
           // Verificacion que no me paso de la cantidad maxima 
           // de productores permitida.
           if (i<PControlesQ.length){
               //Inicializacion del nuevo productor
            PControlesQ[i] = new Productor(AlmControls,SProd1,SConsumidor,ExcluAlm1,1);
            PControlesQ[i].start();
                //Actualizamos cantidad de productores 
            String counterText = String.valueOf(i+1);
            prodControlText.setText(counterText);
           }    
           
           //Los dos siguientes ifs son para avisar y resetear 
           //sobre errores al intentar agregar mas productores
           //de lo permitido
           if (i == PControlesQ.length){
               infobox.setText("Error: no se pueden agregar mas productores de consola.");
           }
           
           if (i == 0){
                infobox.setText(" ");
            }
           
    }//GEN-LAST:event_PCAddMouseClicked

    private void prodControlTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prodControlTextActionPerformed
        // TODO add your handling code here:
        
      
        
    }//GEN-LAST:event_prodControlTextActionPerformed

    private void StartButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StartButtonMouseClicked
        // TODO add your handling code here:
        prodcontrol++;
        if (prodcontrol == 1){
            
            int pc = miFile.getInitProd1();
            int pcs = miFile.getInitProd2();
            int pp = miFile.getInitProd3();
            int ass = miFile.getInitAssemblers();        
            int mpc = miFile.getMaxControls();
            int mpcs = miFile.getMaxConsoles();
            int mpp = miFile.getMaxPacks();       
            int mass = miFile.getMaxAssemblers();
            int dt = miFile.getDispatchLapse();
            int st = miFile.getTimestart();



            prodControlText.setText(String.valueOf(pc));
            prodConsolaText.setText(String.valueOf(pcs));
            prodPaqueteText.setText(String.valueOf(pp));
            prodAssText.setText(String.valueOf(ass));        
            MaxControlesText.setText(String.valueOf(mpc));
            MaxConsolasText.setText(String.valueOf(mpcs));
            MaxPackText.setText(String.valueOf(mpp));

            //Productores de Controles inicial
            for (int i = 0; i<pc;i++){                                             //Inicializamos en los arrays el num de Productores inicial y comienzan a trabajar
                PControlesQ[i] = new Productor(AlmControls,SProd1,SConsumidor,ExcluAlm1,1);
                PControlesQ[i].start();
            }

            //Productores de Consolas inicial
            for (int i = 0; i<pcs;i++){                                             //Inicializamos en los arrays el num de Productores inicial y comienzan a trabajar
                PConsolasQ[i] = new Productor(AlmConsoles,SProd2,SConsumidor,ExcluAlm2,3);
                PConsolasQ[i].start();
            }

            //Productores de Paquetes inicial
            for (int i = 0; i<pp;i++){                                             //Inicializamos en los arrays el num de Productores inicial y comienzan a trabajar
                PPacksQ[i] = new Productor(AlmPacks,SProd3,SConsumidor,ExcluAlm3,1);
                PPacksQ[i].start();
            }

            //Ensambladores
            for (int i = 0; i<ass;i++){

                CAssemblerQ[i] = new Consumidor(AlmControls,AlmConsoles,AlmPacks,
                SProd1,SProd2,SProd3, SConsumidor,
                ExcluAlm1, ExcluAlm2, ExcluAlm3);
                CAssemblerQ[i].start();
            }

            Cronometro Cronometrador = new Cronometro(dt,st,Clock);
            Cronometrador.start();
            Gerente G = new Gerente(Clock,Cronometrador);
            G.start();


            dispatchCountdownText.setText(String.valueOf(miFile.getDispatchLapse()));
            //este thread con runnable es para que cada 5 milisegundos 
            //se lea y se imprima en el app el estado de todas las variables 
            Thread textUpdate = new Thread (new Runnable(){
                public void run(){
                    while(true){
                        try {

                        int controles = AlmControls.Contar();
                        //System.out.println("controles = "+controles);
                        int consolas = AlmConsoles.Contar();
                        //    System.out.println("consolas = "+consolas);
                        int paquetes = AlmPacks.Contar();
                        //    System.out.println("paquetes = "+paquetes);

                        ControlesProducidos.setText(String.valueOf(controles));
                        ConsolasProducidas.setText(String.valueOf(consolas));
                        PaquetesProducidos.setText(String.valueOf(paquetes));
                        
                        int c = 0;
                        for (int i = 0; i < CAssemblerQ.length;i++){
                            if (CAssemblerQ[i] != null){
                                c+= CAssemblerQ[i].getCount();
                            }
                        }
                        ProductosEnsamblados.setText(String.valueOf(c));
                        
                        //Seccion del reloj y el countdown para el dia de despacho
                        dayCounterText.setText(String.valueOf(Cronometrador.getTimeElapsed()));
                        dispatchCountdownText.setText(String.valueOf(Cronometrador.getDispatch()));
                        estadoCronometro.setText(Cronometrador.getEstado());
                        estadoGerente.setText(G.getEstado());
                        
                        //Evento de despacho como tal 
                        if (G.isSignal()==true){
                            alertDispatch.setText("DISPATCH ALERT");
                            int sum = Integer.valueOf(unitsSold.getText())+Integer.valueOf(ProductosEnsamblados.getText());
                            unitsSold.setText(String.valueOf(sum));
                            G.disableSignal();
                            
                            for (int i = 0; i<CAssemblerQ.length;i++){
                                if (CAssemblerQ[i]!=null){
                                    CAssemblerQ[i].setCount(0);
                                    
                                    ProductosEnsamblados.setText("BACK TO 0");
                                }
                            }
                            
                            for (int i = 0; i < CAssemblerQ.length;i++){
                            if (CAssemblerQ[i] != null){
                                c+= CAssemblerQ[i].getCount();
                            }
                        }
                            
                            ProductosEnsamblados.setText(String.valueOf(c));
                            alertDispatch.setText("done");
                        }
                        else {
                            alertDispatch.setText("chill");
                        }

                        sleep(5);
                        } catch (InterruptedException ex) {
                            Logger.getLogger(proyectoApp.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                }
            });
            textUpdate.start();

        }
        
    }//GEN-LAST:event_StartButtonMouseClicked

    private void MaxControlesTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MaxControlesTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MaxControlesTextActionPerformed

    private void MaxConsolasTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MaxConsolasTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MaxConsolasTextActionPerformed

    private void MaxPackTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MaxPackTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MaxPackTextActionPerformed

    private void StopButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StopButtonMouseClicked
        // TODO add your handling code here:
       System.exit(0);
    }//GEN-LAST:event_StopButtonMouseClicked

    private void StartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartButtonActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_StartButtonActionPerformed

    private void PCdeleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PCdeleteMouseClicked
        // TODO add your handling code here:
        //obtengo el valor actual de productores 
        int c = Integer.valueOf(prodControlText.getText());
        //verifico que si quito uno, no voy a estar despidiendo al 
        //productor "0" (es decir nadie)
        c = c-1;
        if (c >= 0){
            //el stop me de aqui es un "graceful end" para 
            //no detener abruptamente a mi hilo
        PControlesQ[c].stopMe();
        PControlesQ[c]=null;
        prodControlText.setText(String.valueOf(c));
        }
        //para que salga el error si estoy intentando despedir cuando estamos en 
        //cuenta 0 de productores:
        else {
            infobox.setText("Error: No hay mas productores de consolas que puedas despedir");
            
        }
        //para que se borre cualquier mensaje de alera si estamos despidiendo despues 
        //intentar contratar a mas productores de la cuenta
        if (c == (PControlesQ.length-1)){
                infobox.setText(" ");
            }
        
    }//GEN-LAST:event_PCdeleteMouseClicked

    private void PCNdeleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PCNdeleteMouseClicked
        // TODO add your handling code here:
        
        int c = Integer.valueOf(prodConsolaText.getText());
        c = c-1;
        if (c >= 0){
        PConsolasQ[c].stopMe();
        PConsolasQ[c]=null;
        prodConsolaText.setText(String.valueOf(c));
        }
        else {
            infobox.setText("Error: No hay mas productores de controles que puedas despedir");
            
        }
        if (c == (PConsolasQ.length-1)){
                infobox.setText(" ");
            }
        
    }//GEN-LAST:event_PCNdeleteMouseClicked

    private void PPDeleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PPDeleteMouseClicked
        // TODO add your handling code here:
        
        int c = Integer.valueOf(prodPaqueteText.getText());
        c = c-1;
        if (c >= 0){
        PPacksQ[c].stopMe();
        PPacksQ[c]=null;
        prodPaqueteText.setText(String.valueOf(c));
        }
        else {
            infobox.setText("Error: No hay mas productores de paquetes que puedas despedir");
            
        }
        if (c == (PPacksQ.length-1)){
                infobox.setText(" ");
            }
        
        
    }//GEN-LAST:event_PPDeleteMouseClicked

    private void PCNAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PCNAddMouseClicked
        // TODO add your handling code here:
        
        int i = Integer.valueOf(prodConsolaText.getText());
           
           
           if (i<PConsolasQ.length){

            PConsolasQ[i] = new Productor(AlmConsoles,SProd2,SConsumidor,ExcluAlm2,3);
            PConsolasQ[i].start();
            //System.out.println("creamos un productor de controles");
               
               
           String counterText = String.valueOf(i+1);
           prodConsolaText.setText(counterText);
           }
           
           if (i == PConsolasQ.length){
               infobox.setText("Error: no se pueden agregar mas productores de consola.");
           }
           
           if (i == 0){
                infobox.setText(" ");
            }
        
    }//GEN-LAST:event_PCNAddMouseClicked

    private void PPAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PPAddMouseClicked
        // TODO add your handling code here:
        
        int i = Integer.valueOf(prodPaqueteText.getText());
           
           
           if (i<PPacksQ.length){

            PPacksQ[i] = new Productor(AlmPacks,SProd3,SConsumidor,ExcluAlm3,1);
            PPacksQ[i].start();
            //System.out.println("creamos un productor de controles");
               
               
           String counterText = String.valueOf(i+1);
           prodPaqueteText.setText(counterText);
           }
           
           if (i == PPacksQ.length){
               infobox.setText("Error: no se pueden agregar mas productores de paquete.");
           }
           
           if (i == 0){
                infobox.setText(" ");
            }
        
    }//GEN-LAST:event_PPAddMouseClicked

    private void priceTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priceTextActionPerformed

    private void moneyDisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moneyDisplayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_moneyDisplayActionPerformed

    private void calculateButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_calculateButtonMouseClicked
        // TODO add your handling code here:
        
        int l = priceText.getText().length();
        int i = 0;
        int e = 0;
        //Checkeo de que el texto de precio es un numero
        while (i < l){
            char txt = priceText.getText().charAt(i);
            if(!Character.isDigit(txt)){
                e++;
            }
            i++;
        }
        
        if (e==0){
            int p = Integer.valueOf(priceText.getText());
            int s = Integer.valueOf(unitsSold.getText());
            int t = p*s;
            moneyDisplay.setText(String.valueOf(t));
        }
        
    }//GEN-LAST:event_calculateButtonMouseClicked

    private void EnsAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EnsAddMouseClicked
        // TODO add your handling code here:
        
        int i = Integer.valueOf(prodAssText.getText());
           
           
           if (i<CAssemblerQ.length){

            CAssemblerQ[i] = new Consumidor(AlmControls,AlmConsoles,AlmPacks,
                SProd1,SProd2,SProd3, SConsumidor,
                ExcluAlm1, ExcluAlm2, ExcluAlm3);
            CAssemblerQ[i].start();
               
            String counterText = String.valueOf(i+1);
            prodAssText.setText(counterText);
            }
           
            if (i == CAssemblerQ.length){
                infobox.setText("Error: no se pueden agregar mas ensambladores de paquete.");
            }

            if (i == 0){
                 infobox.setText(" ");
             }
        
        
    }//GEN-LAST:event_EnsAddMouseClicked

    private void EnsDeleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EnsDeleteMouseClicked
        // TODO add your handling code here:
        
                int c = Integer.valueOf(prodAssText.getText());
                c = c-1;
                if (c >= 0){
                CAssemblerQ[c].stopMe();
                CAssemblerQ[c]=null;
                prodAssText.setText(String.valueOf(c));
                }
                else {
                    infobox.setText("Error: No hay mas ensambladores de paquetes que puedas despedir");

                }
                if (c == (CAssemblerQ.length-1)){
                        infobox.setText(" ");
                    }

    }//GEN-LAST:event_EnsDeleteMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(proyectoApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(proyectoApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(proyectoApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(proyectoApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //Project itself//
        String textfile = "default.txt";
      
        
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                new proyectoApp().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ConsolasProducidas;
    private javax.swing.JTextField ControlesProducidos;
    private javax.swing.JLabel CronoTitle;
    private javax.swing.JLabel CronoTitle1;
    private javax.swing.JPanel CronometradorPanel;
    private javax.swing.JButton EnsAdd;
    private javax.swing.JButton EnsDelete;
    private javax.swing.JLabel EnsambladoresGde;
    private javax.swing.JLabel EnsambladoresPeq;
    private javax.swing.JTextField MaxConsolasText;
    private javax.swing.JTextField MaxControlesText;
    private javax.swing.JTextField MaxPackText;
    private javax.swing.JButton PCAdd;
    private javax.swing.JButton PCNAdd;
    private javax.swing.JButton PCNdelete;
    private javax.swing.JButton PCdelete;
    private javax.swing.JButton PPAdd;
    private javax.swing.JButton PPDelete;
    private javax.swing.JPanel PanelEnsambladores;
    private javax.swing.JTextField PaquetesProducidos;
    private javax.swing.JLabel ProdDePaquetesText;
    private javax.swing.JPanel ProdsEnsambladores;
    private javax.swing.JTextField ProductosEnsamblados;
    private javax.swing.JButton StartButton;
    private javax.swing.JButton StopButton;
    private javax.swing.JTextField alertDispatch;
    private javax.swing.JButton calculateButton;
    private javax.swing.JTextField dayCounterText;
    private javax.swing.JTextField dispatchCountdownText;
    private javax.swing.JTextField estadoCronometro;
    private javax.swing.JTextField estadoGerente;
    private javax.swing.JLabel infobox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField moneyDisplay;
    private javax.swing.JTextField priceText;
    private javax.swing.JTextField prodAssText;
    private javax.swing.JTextField prodConsolaText;
    private javax.swing.JTextField prodControlText;
    private javax.swing.JTextField prodPaqueteText;
    private javax.swing.JTextField unitsSold;
    // End of variables declaration//GEN-END:variables
}
